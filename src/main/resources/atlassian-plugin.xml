<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}" />
        <param name="plugin-icon">images/pluginIcon.png</param>
        <param name="plugin-logo">images/pluginLogo.png</param>
        <param name="atlassian-data-center-compatible">true</param>
        <param name="configure.url">/plugins/servlet/yaccHook/config</param>
    </plugin-info>

    <!-- add our i18n resource -->
    <resource type="i18n" name="i18n" location="yacc"/>
    
    <!-- add our web resources -->
    <web-resource key="yacc-resources" name="yacc Web Resources">
        <dependency>com.atlassian.auiplugin:ajs</dependency>
        
        <resource type="download" name="yacc.css" location="/css/yacc.css"/>
        <resource type="download" name="yacc.js" location="/js/yacc.js"/>
        <resource type="download" name="images/" location="/images"/>

        <context>yacc</context>
    </web-resource>
    
    <!-- import from the product container -->
    <component-import key="applicationProperties" interface="com.atlassian.sal.api.ApplicationProperties" />

	<component-import key="applicationLinkService" interface="com.atlassian.applinks.api.ApplicationLinkService" />

    <component key="changesetsService" class="com.isroot.stash.plugin.ChangesetsServiceImpl" public="true">
        <interface>com.isroot.stash.plugin.ChangesetsService</interface>
    </component>

    <component key="jiraService" class="com.isroot.stash.plugin.JiraServiceImpl" public="true">
        <interface>com.isroot.stash.plugin.JiraService</interface>
    </component>

    <component key="yaccService" class="com.isroot.stash.plugin.YaccServiceImpl" public="true">
        <interface>com.isroot.stash.plugin.YaccService</interface>
    </component>

	<repository-hook key="yaccHook" name="Yet Another Commit Checker"  class="com.isroot.stash.plugin.YaccHook">
		<description>Yet Another Commit Checker pre-receive hook.</description>
		<config-form name="Yacc Hook Config" key="yaccHook-config">
			<view>com.atlassian.stash.repository.hook.ref.formContents</view>
			<directory location="/static/" />
		</config-form>
		<validator>com.isroot.stash.plugin.ConfigValidator</validator>
	</repository-hook>

    <!-- Global pre-receive hook module definitions -->
    <servlet key="yaccHook-config-servlet" name="YaccHook Configuration Servlet"
             class="com.isroot.stash.plugin.YaccConfigServlet">
        <url-pattern>/yaccHook/*</url-pattern>
    </servlet>

    <stash-resource key="yaccHook-config-serverside">
        <directory location="/static/">
            <include>/**/simple.soy</include>
            <include>/**/serverside-config.soy</include>
        </directory>
        <!--<context>plugin.page.stashbot</context>-->
        <dependency>com.atlassian.stash.stash-web-plugin:server-soy-templates</dependency>
        <dependency>com.atlassian.stash.stash-web-plugin:global</dependency>
    </stash-resource>

    <component-import key="soyTemplateRenderer" interface="com.atlassian.soy.renderer.SoyTemplateRenderer"/>

    <pre-receive-hook key="yaccPreReceiveHook" name="Yet Another Commit Checker"
                      class="com.isroot.stash.plugin.YaccPreReceiveHook">
        <description>Yet Another Commit Checker global pre-receive hook configuration. Is overridden by repository hook
            configurations.
        </description>
        <config-form name="Yacc Hook Config" key="yaccHook-config">
            <view>com.atlassian.stash.repository.hook.ref.formContents</view>
            <directory location="/static/"/>
        </config-form>
        <validator>com.isroot.stash.plugin.ConfigValidator</validator>
    </pre-receive-hook>

    <!-- Makes PluginSettingsFactory available to the plugin to allow the global settings to be set. -->
    <component-import key="pluginSettingsFactory" interface="com.atlassian.sal.api.pluginsettings.PluginSettingsFactory" />

</atlassian-plugin>